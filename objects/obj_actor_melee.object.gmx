<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_human_stand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>class_bad</parentName>
  <maskName>spr_actor_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
event_inherited();

//health and other
my_health_max = 100
my_health = my_health_max
level = 0
exp_per_drop = 0
stunned = false

//AI
path = path_add();
points = path_get_number(path);
point = 1;
mag = irandom_range(12,16);
target_x = x
target_y = y
z = 0

defence = 0

ai_state = "guard"

//Guard
max_distance_to_chase = 128

//Chase
chase_score = 0
chase_score_max = 100

//animation 1 
animation_priority = 0;
animation_index = 0;
animation_current = 'noone';

can_sprint = false
sprint_distance = 32
sprint_speed_multi = 1
sprint_particle = false
inverted_sprint = true

//animation 2
sprite_idle = spr_human_stand
sprite_walk =spr_human_walk
sprite_melee = spr_human_attack

cloth_sprite_idle = spr_roug_cloth_stand
cloth_sprite_walk = spr_roug_cloth_walk
//sprite_hit = spr_roug_stand
cloth_sprite_melee = spr_roug_cloth_attack

cloth_sprite_now = image_index
cloth_colour = choose(c_red,c_blue,c_orange,c_yellow,c_aqua,c_green,c_lime,c_purple,c_fuchsia) //colorful enemy huh ?

//other
phy_fixed_rotation = true
image_speed = 0
animation_play('idle',0.1,an_loop,1,3);

blood_color = c_red

//attack
attacking = false
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inventory

//Main Weapon
wpn_sprite = spr_iron_greatsword
can_attack = true

wpn_attack_speed = 20

//Melee
wpn_damage = 25
wpn_reswing_speed = 0.05
wpn_swing_angle = 0

wpn_knockback = 4
wpn_range = 9

sprite_yplus = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Melee Attack
var dir
var my_power
var player
if instance_exists(class_player) {
player = instance_nearest(x,y,class_player) 

my_power = 1 - wpn_swing_angle/135

dir = point_direction(phy_position_x,phy_position_y,player.phy_position_x,player.phy_position_y);

a = instance_create(x+lengthdir_x(wpn_range,dir),y+lengthdir_y(wpn_range,dir),obj_melee_wishp);
a.team = "bad"
a.phy_rotation = -dir
a.owner = id
a.dir = dir
a.range = wpn_range
a.damage = wpn_damage*my_power
a.knockback = wpn_knockback*my_power

wpn_swing_angle = 135
animation_play('melee',0.25,an_clamp,2,3);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///AI Control
if instance_exists(class_player) {
player = instance_nearest(x,y,class_player)

switch (ai_state)
{
    case "guard": 
    if (collision_line(x,y,player.x,player.y+3,class_collision,true,true) &gt; 0 or distance_to_point(xstart,ystart) &gt; max_distance_to_chase or point_distance(xstart,ystart,player.x,player.y) &gt; max_distance_to_chase) {
        target_x = xstart
        target_y = ystart
        } else {
        target_x = player.x
        target_y = player.y
        if distance_to_object(player) &lt; wpn_range+1 and alarm[0] &lt; 1 {
            alarm[0] = wpn_attack_speed + irandom_range(3,-3)
        }
    }
    break;
    
    case "chase": 
    if collision_line(x,y,player.x,player.y+3,class_collision,true,true) &gt; 0 {
        if chase_score &gt; 0 chase_score -= 0.5 
        } else {
        chase_score = chase_score_max
        }
        
        if distance_to_object(player) &lt; wpn_range+1 and alarm[0] &lt; 1 {
            alarm[0] = wpn_attack_speed + irandom_range(3,-3)
        }
        
        if chase_score &gt; 0 {
        target_x = player.x
        target_y = player.y
        }
    break;

}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprite Y Plus Control
//This code is terrible. 
//Trust me ...
switch (sprite_index)
{
    case sprite_idle:
    sprite_yplus = image_index
    break;
    case sprite_walk:
    if image_index = 2 {
    sprite_yplus = 1
    } else {
    sprite_yplus = 0
    }
    break;
    case sprite_melee:
    sprite_yplus = image_index
    break;
}
 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprint Control
if can_sprint = true {
    if !inverted_sprint
    {
        if point_distance(x,y,target_x,target_y) &lt; sprint_distance+1 {
            sprint_speed_multi = 1.2
            if point_distance(phy_position_x,phy_position_y,phy_position_xprevious,phy_position_yprevious) &gt;= 0.4 /*and xaxis != 0 and yaxis != 0*/ {
            part_particles_create(global.pSystem,x+irandom_range(-1,1),y+3,global.part_sprint_smoke,1)}
        } else {
            sprint_speed_multi = 1
        }
        
    } else {
        if point_distance(x,y,target_x,target_y) &gt; sprint_distance+1 {
            sprint_speed_multi = 1.2
            if point_distance(phy_position_x,phy_position_y,phy_position_xprevious,phy_position_yprevious) &gt;= 0.4 /*and xaxis != 0 and yaxis != 0*/ {
            part_particles_create(global.pSystem,x+irandom_range(-1,1),y+3,global.part_sprint_smoke,1)}
        } else {
            sprint_speed_multi = 1
           }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move


mp_grid_path(global.grid,path,x,y+2,target_x,target_y + 2,1);

points = path_get_number(path);


    var dir = point_direction(x,y + 2,path_get_point_x(path,point),path_get_point_y(path,point));
    if point_distance(x,y,target_x,target_y) &gt; 8 and attacking = false  physics_apply_force(x,y-2,lengthdir_x(mag*sprint_speed_multi,dir+irandom_range(-7,7)),lengthdir_y(mag*sprint_speed_multi,dir+irandom_range(-7,7)));
    if point_distance(x,y + 2,path_get_point_x(path,point),path_get_point_y(path,point)) &lt; 1 {
    }


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animations and other
//if xaxis != 0 image_xscale = xaxis

switch (sprite_index) {

    case sprite_idle:
        {
        cloth_sprite_now = cloth_sprite_idle
        break; 
        }
    case sprite_walk:
        {
        cloth_sprite_now = cloth_sprite_walk
        break; 
        }
    case sprite_melee:
        {
        cloth_sprite_now = cloth_sprite_melee
        break; 
        }
}

if point_distance(phy_position_x,phy_position_y,phy_position_xprevious,phy_position_yprevious) &lt; 0.4 /*and xaxis != 0 and yaxis != 0*/ {
animation_play('idle',0.1,an_loop,1,3);
} else { 
animation_play('walk',0.2,an_loop,1,4);
}

depth = -y
animation_update_player();

if phy_position_x &gt; phy_position_xprevious {image_xscale = lerp(image_xscale,1,0.25)} else {image_xscale = lerp(image_xscale,-1,0.25)}

wpn_swing_angle = lerp(wpn_swing_angle,0,wpn_reswing_speed);

if sprite_index = sprite_melee {
attacking = true
} else {
attacking = false
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TEST DEATH
if my_health &lt; 0.1 {
room_speed = 34
obj_controller.alarm[10] = 1
create_corpse(x,y)
instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="class_collision">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Collison</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="class_bad">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Collisona</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Things
if optymiz(x,y) = 0 exit;

draw_sprite_ext(spr_actor_shadow,image_index,x-(0.5*image_xscale),y+1,abs(image_xscale),image_yscale,image_angle,c_white,image_alpha)
draw_self();
draw_sprite_ext(cloth_sprite_now,image_index,x,y,image_xscale,image_yscale,image_angle,cloth_colour,image_alpha)

//Draw Weapon
draw_sprite_ext(wpn_sprite,0,x+4*image_xscale,y+1+floor(sprite_yplus),1,1,-wpn_swing_angle*image_xscale+45,c_white,1)


//draw_path(path, x, y, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>1.29999995231628</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>8</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.100000001490116</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,6</point>
    <point>8,6</point>
    <point>8,8</point>
    <point>0,8</point>
  </PhysicsShapePoints>
</object>
