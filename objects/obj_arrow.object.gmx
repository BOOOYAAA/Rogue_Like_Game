<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_arrow_projectile</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>class_projectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Init !!!
team = "good"

z = 3
zprevious = z
z_speed = random_range(0.5,0.8);
zSpeedPerBounce = 0.5
zgravity = 0
zgravity_max = 6.5
image_speed = 0
destroy_score = 0

//effect = global.part_star_fluid
effect = noone

rot = choose(-1,1)
angle = 0
//a_speed = 1.5

ded = 1

phy_fixed_rotation = true
phy_bullet = true

//physics_apply_impulse(x ,y ,lengthdir_x(a_speed,angle) ,lengthdir_y(a_speed,angle) )

can_pick = true
can_hit = true
damage = 15

attached = false
attach_dir = 0
attach_timer = 6

target = noone

knockback = 0


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Z Physics
var xx
var yy

if attached = false { image_index = 0
    z += z_speed
    z -= zgravity
    zgravity = lerp(zgravity,zgravity_max,0.0075)

    if z &lt; 1 {
        phy_linear_damping = 40
        z_speed = z_speed*zSpeedPerBounce
        zgravity = 0
        z = 1
        destroy_score += 2.5
        can_hit = false
        
        if rot &gt; 0 {
        rot += point_distance(phy_position_x,phy_position_y,phy_position_xprevious,phy_position_yprevious)*random_range(2,5)
        } else {
        rot -= point_distance(phy_position_x,phy_position_y,phy_position_xprevious,phy_position_yprevious)*random_range(2,5)
        }
    
    } else {
        phy_linear_damping = 0.1
    }
    
} else {
    image_index = 1
}

if z &lt; 0 {
z = 0
}

if destroy_score &gt; 20 {
image_alpha = sin(ded) * 2
ded += ded/15
}
if ded &gt; 64 {
instance_destroy();
}
        if effect !=noone and can_hit = true {
            part_particles_create(global.pSystem,x,y-z,effect,1)
            //part_particles_create(global.pSystem,xprevious,yprevious-zprevious,effect,1)
        }

if attach_timer &gt; 0 attach_timer -= 1
zprevious = z
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug and other
if target != noone {
    
    if !instance_exists(target) {
        attached = false
        phy_fixed_rotation = true
    } else {
        angle = attach_dir
        destroy_score += 0.5
    }
} else {
    if point_distance(phy_position_x,phy_position_y,phy_position_xprevious,phy_position_yprevious) &gt; 1 {
        angle = point_direction(phy_position_x,phy_position_y,phy_position_xprevious,phy_position_yprevious) + 180 }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pick Arrow
var player = collision_circle(x,y,14,obj_actor_player,true,false)

if player != noone and can_hit = false and can_pick = true and (z &lt; 2 or attached = true) {
    
    phy_position_x = lerp(phy_position_x,player.phy_position_x,0.2)
    phy_position_y = lerp(phy_position_y,player.phy_position_y,0.2)
    
    if !audio_is_playing(snd_arrow_pickup) and distance_to_object(player) &lt; 0.3 {
    
        audio_play_sound(snd_arrow_pickup,1,false);
        player.arrows += 1
        instance_destroy();
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="class_prop">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if z &lt; 10 and can_hit = true {

    target = other.id
    weld = physics_joint_weld_create(id,target,x,y, 0, 5, 2, false);
    attach_dir = angle
    attached = true
    can_hit = false
    phy_fixed_rotation = false
    
    with other {
    physics_apply_impulse(x,y,lengthdir_x(0.1,other.angle),lengthdir_y(0.1,other.angle))
    }
    other.my_health -= damage * 1.5
    
    d = instance_create(x,y,obj_damag_ind)
    d.damage = round(damage * 1.5)

    if (optymiz(x,y)) audio_play_sound(snd_arrow_hit,1,false)

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="class_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if z &lt; 10 and can_hit = true and attach_timer == 0 {

    target = other.id
    weld = physics_joint_weld_create(id,target,x,y, 0, 5, 2, false);
    attach_dir = angle
    attached = true
    can_hit = false
    phy_fixed_rotation = false

    if (optymiz(x,y)) audio_play_sound(snd_arrow_hit,1,false)

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="class_collision">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Collision</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="class_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if z &lt; other.z+10 and can_hit = true and team = "bad" {  
var dmg
dmg = damage - other.defence
if dmg &lt; 0 dmg = 0        

    can_hit = false
    
    with other {
    physics_apply_impulse(x,y,lengthdir_x(0.2,other.angle),lengthdir_y(0.2,other.angle))
    }
    other.my_health -= dmg
    
    d = instance_create(x,y,obj_damag_ind)
    if dmg = 0 {
        d.color = c_gray
        d.damage = "Defended"
    } else {
        d.damage = round(dmg)
    }
    
    if (optymiz(x,y)) if (optymiz(x,y)) if dmg &gt; 0 {audio_play_sound(other.hurt_sound,1,false) audio_play_sound(snd_arrow_hit,1,false)} else audio_play_sound(snd_defeted,1,false)
    
    place_blood(other.x+irandom_range(2,-2),other.y+irandom_range(2,-2),2,other.blood_color)
} //else {
//can_hit = false
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="class_bad">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if z &lt; other.z+10 and can_hit = true and team = "good" {
var dmg
dmg = damage - other.defence
if dmg &lt; 0 dmg = 0        

    can_hit = false
    
    with other {
    physics_apply_impulse(x,y,lengthdir_x(0.2,other.angle),lengthdir_y(0.2,other.angle))
    }
    other.my_health -= dmg
    
    d = instance_create(x,y,obj_damag_ind)
    if dmg = 0 {
        d.color = c_gray
        d.damage = "Defended"
    } else {
        d.damage = round(dmg)
    }
    
    if (optymiz(x,y)) if (optymiz(x,y)) if dmg &gt; 0 {audio_play_sound(other.hurt_sound,1,false) audio_play_sound(snd_arrow_hit,1,false)} else audio_play_sound(snd_defeted,1,false)
    
    place_blood(other.x+irandom_range(2,-2),other.y+irandom_range(2,-2),2,other.blood_color)
} //else {
//can_hit = false
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if optymiz(x,y) = 0 exit;
//draw_sprite(spr_part_shadow,0,x,y)

depth = -y + 4
if attached = false draw_sprite_ext(sprite_index,image_index,x,y,image_xscale*0.75,image_yscale*0.75,angle+rot,c_black,0.5*image_alpha)
depth = -y - z + 4
draw_sprite_ext(sprite_index,image_index,x,y-z,image_xscale*0.75,-image_yscale*0.75,angle+rot,image_blend,image_alpha)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.400000005960464</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.125</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>5</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>4.5,2.5</point>
    <point>2,5</point>
  </PhysicsShapePoints>
</object>
